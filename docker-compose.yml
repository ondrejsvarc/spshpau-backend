version: '3.8'

services:
  config-server:
    build:
      context: ./services/config
      args:
        JAR_FILE: /target/config-0.1.1-ALPHA.jar
    image: spshpau/config-server:0.1.1-ALPHA
    container_name: spshpau-config-server
    ports:
      - "8888:8888"
    volumes:
      - spshpau:/config-server
    networks:
      - spshpau_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  discovery-server:
    build:
      context: ./services/discovery
      args:
        JAR_FILE: /target/discovery-0.1.1-ALPHA.jar
    image: spshpau/discovery-server:0.1.1-ALPHA
    container_name: spshpau-discovery-server
    ports:
      - "8761:8761"
    volumes:
      - spshpau:/discovery-server
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    networks:
      - spshpau_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: spshpau-keycloak
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: true
    volumes:
      - keycloak:/opt/keycloak/data
    command: 
      - start-dev
    networks:
      - spshpau_network
    healthcheck:
      test: ["CMD", "echo", "", "0"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  postgresqldb:
    image: postgres
    container_name: spshpau-postgresqldb
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=spshpau
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=spshpau-db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - spshpau_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spshpau -d spshpau-db"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo
    container_name: spshpau-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=spshpau
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - mongo_data:/data/db
    networks:
      - spshpau_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  mongo-express:
    image: mongo-express
    container_name: spshpau-mongo-express
    ports:
      - "8082:8082"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=spshpau
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
    networks:
      - spshpau_network

  userservice:
    build:
      context: ./services/userservice
      args:
        JAR_FILE: /target/userservice-0.1.1-ALPHA.jar
    image: spshpau/userservice:0.1.1-ALPHA
    container_name: spshpau-userservice
    ports:
      - "8090:8090"
    volumes:
      - spshpau:/user-service
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      postgresqldb:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb:5432/spshpau-db
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    networks:
      - spshpau_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8090/api/v1/util/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 45s

  chatservice:
    build:
      context: ./services/chatservice
      args:
        JAR_FILE: /target/chatservice-0.1.1-ALPHA.jar
    image: spshpau/chatservice:0.1.1-ALPHA
    container_name: spshpau-chatservice
    ports:
      - "8091:8091"
    volumes:
      - spshpau:/chat-service
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      userservice:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATA_MONGODB_URI=mongodb://spshpau:admin@mongodb:27017/chat?authSource=admin
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - APPLICATION_CONFIG_USERCLIENTURL=http://userservice:8090/api/v1
    networks:
      - spshpau_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8091/api/v1/util/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 45s

  projectservice:
    build:
      context: ./services/projectservice
      args:
        JAR_FILE: /target/projectservice-0.1.1-ALPHA.jar
    image: spshpau/projectservice:0.1.1-ALPHA
    container_name: spshpau-projectservice
    ports:
      - "8092:8092"
    volumes:
      - spshpau:/project-service
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      postgresqldb:
        condition: service_healthy
      userservice:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresqldb:5432/spshpau-project-db
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - APPLICATION_CONFIG_USERCLIENTURL=http://userservice:8090/api/v1
    networks:
      - spshpau_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8092/api/v1/util/ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 45s

  gateway:
    build:
      context: ./services/gateway
      args:
        JAR_FILE: /target/apigateway-0.1.1-ALPHA.jar
    image: spshpau/gateway:0.1.1-ALPHA
    container_name: spshpau-gateway
    ports:
      - "8081:8081"
    volumes:
      - spshpau:/api-gateway
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      userservice:
        condition: service_healthy
      chatservice:
        condition: service_healthy
      projectservice:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
    networks:
      - spshpau_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

networks:
  spshpau_network:
    driver: bridge

volumes:
  keycloak: {}
  postgres_data: {}
  mongo_data: {}
  spshpau: {}